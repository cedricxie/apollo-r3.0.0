<launch>
    <arg name="velodyne32_calibration_file" default="$(find velodyne_pointcloud)/params/HDL32E_calibration_example.yaml"/>
    <arg name="extrinsics_velodyne32" default="$(find velodyne_pointcloud)/params/velodyne32_novatel_extrinsics_example.yaml"/>
    <arg name="velodyne32_frame_id" default="velodyne32"/>
    <arg name="organized" default="false"/>
    <arg name="min_range" default="0.9" />
    <arg name="max_range_32" default="70.0" />
    <arg name="rpm" default="600"/>
    <arg name="model" default="HDL32E" />
    <arg name="firing_data_port" default="2368"/>
    <arg name="positioning_data_port" default="8308"/>
    <!-- 100ms -->
    <arg name="tf_query_timeout" default="0.1"/>
    <arg name="nodelet_manager_name" value="velodyne32_nodelet_manager" />

  <include file="$(find velodyne_pointcloud)/launch/nodelet_manager.launch">
    <arg name="nodelet_manager_name" value="$(arg nodelet_manager_name)"/>
  </include>
    <!--  HDL32E -->
    <!--  driver nodelets -->
  <include file="$(find velodyne_driver)/launch/driver_nodelet.launch">
    <arg name="node_name" value="sensor_velodyne32_driver"/>
    <arg name="nodelet_manager_name" value="$(arg nodelet_manager_name)"/>
    <arg name="model" value="$(arg model)"/>
    <arg name="rpm" value="$(arg rpm)"/>
    <arg name="frame_id" value="$(arg velodyne32_frame_id)"/>
    <arg name="topic" value="/apollo/sensor/velodyne32/VelodyneScanUnified"/>
    <arg name="firing_data_port" value="$(arg firing_data_port)"/>
    <arg name="positioning_data_port" value="$(arg positioning_data_port)"/>
  </include>
  
  <!-- start cloud nodelet using test calibration file -->
  <include file="$(find velodyne_pointcloud)/launch/convert_nodelet.launch">
    <arg name="node_name" value="sensor_velodyne32_convert"/>
    <arg name="nodelet_manager_name" value="$(arg nodelet_manager_name)"/>
    <arg name="model" value="$(arg model)"/>
    <arg name="calibration" default="$(arg velodyne32_calibration_file)" />
    <arg name="organized" default="$(arg organized)"/>
    <arg name="min_range" default="$(arg min_range)" />
    <arg name="max_range" default="$(arg max_range_32)" />
    <arg name="topic_pointcloud" default="/apollo/sensor/velodyne32/PointCloud2"/>
    <arg name="topic_packets" default="/apollo/sensor/velodyne32/VelodyneScanUnified"/>
  </include>
  
   <!-- start 32 compensator nodelet -->
  <include file="$(find velodyne_pointcloud)/launch/compensator_nodelet.launch">
    <arg name="node_name" value="sensor_velodyne32_compensator"/>
    <arg name="nodelet_manager_name" value="$(arg nodelet_manager_name)"/>
    <arg name="child_frame_id" value="$(arg velodyne32_frame_id)"/>
    <arg name="tf_query_timeout" value="$(arg tf_query_timeout)"/>
    <arg name="topic_pointcloud" value="/apollo/sensor/velodyne32/PointCloud2"/>
    <arg name="topic_compensated_pointcloud" value="/apollo/sensor/velodyne32/compensator/PointCloud2"/>
  </include>

</launch>
