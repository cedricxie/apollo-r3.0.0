syntax = "proto2";

package apollo.planning_internal;

import "modules/common/proto/header.proto";
import "modules/canbus/proto/chassis.proto";
import "modules/common/proto/pnc_point.proto";
import "modules/localization/proto/localization.proto";
import "modules/map/relative_map/proto/navigation.proto";
import "modules/routing/proto/routing.proto";
import "modules/perception/proto/traffic_light_detection.proto";
import "modules/planning/proto/sl_boundary.proto";
import "modules/planning/proto/decision.proto";

message Debug {
  optional PlanningData planning_data = 2;
}

message SpeedPlan {
  optional string name = 1;
  repeated apollo.common.SpeedPoint speed_point = 2;
}

message StGraphBoundaryDebug {
  enum StBoundaryType {
    ST_BOUNDARY_TYPE_UNKNOWN = 1;
    ST_BOUNDARY_TYPE_STOP = 2;
    ST_BOUNDARY_TYPE_FOLLOW = 3;
    ST_BOUNDARY_TYPE_YIELD = 4;
    ST_BOUNDARY_TYPE_OVERTAKE = 5;
    ST_BOUNDARY_TYPE_KEEP_CLEAR = 6;
  }
  optional string name = 1;
  repeated apollo.common.SpeedPoint point = 2;
  optional StBoundaryType type = 3;
}

message SLFrameDebug {
  optional string name = 1;
  repeated double sampled_s = 2;
  repeated double static_obstacle_lower_bound = 3;
  repeated double dynamic_obstacle_lower_bound = 4;
  repeated double static_obstacle_upper_bound = 5;
  repeated double dynamic_obstacle_upper_bound = 6;
  repeated double map_lower_bound = 7;
  repeated double map_upper_bound = 8;
  repeated apollo.common.SLPoint sl_path = 9;
  repeated double aggregated_boundary_s = 10;
  repeated double aggregated_boundary_low = 11;
  repeated double aggregated_boundary_high = 12;
}

message STGraphDebug {
  message STGraphSpeedConstraint {
    repeated double t = 1;
    repeated double lower_bound = 2;
    repeated double upper_bound = 3;
  }
  message STGraphKernelCuiseRef {
    repeated double t = 1;
    repeated double cruise_line_s = 2;
  }
  message STGraphKernelFollowRef {
    repeated double t = 1;
    repeated double follow_line_s = 2;
  }

  optional string name = 1;
  repeated StGraphBoundaryDebug boundary = 2;
  repeated apollo.common.SpeedPoint speed_limit = 3;
  repeated apollo.common.SpeedPoint speed_profile = 4;
  optional STGraphSpeedConstraint speed_constraint = 5;
  optional STGraphKernelCuiseRef kernel_cruise_ref = 6;
  optional STGraphKernelFollowRef kernel_follow_ref = 7;
}

message SignalLightDebug {
  message SignalDebug {
    optional string light_id = 1;
    optional apollo.perception.TrafficLight.Color color = 2;
    optional double light_stop_s = 3;
    optional double adc_stop_deacceleration = 4;
    optional bool is_stop_wall_created = 5;
  }
  optional double adc_speed = 1;
  optional double adc_front_s = 2;
  repeated SignalDebug signal = 3;
}

message DecisionTag {
  optional string decider_tag = 1;
  optional apollo.planning.ObjectDecisionType decision = 2;
}

message ObstacleDebug {
  optional string id = 1;
  optional apollo.planning.SLBoundary sl_boundary = 2;
  repeated DecisionTag decision_tag = 3;
}

message ReferenceLineDebug {
  optional string id = 1;
  optional double length = 2;
  optional double cost = 3;
  optional bool is_change_lane_path = 4;
  optional bool is_drivable = 5;
  optional bool is_protected = 6;
}

message SampleLayerDebug {
  repeated apollo.common.SLPoint sl_point = 1;
}

message DpPolyGraphDebug {
  repeated SampleLayerDebug sample_layer = 1;
  repeated apollo.common.SLPoint min_cost_point = 2;
}

// next id: 22
message PlanningData {
  // input
  optional apollo.localization.LocalizationEstimate adc_position = 7;
  optional apollo.canbus.Chassis chassis = 8;
  optional apollo.routing.RoutingResponse routing = 9;
  optional apollo.common.TrajectoryPoint init_point = 10;

  repeated apollo.common.Path path = 6;
  repeated SpeedPlan speed_plan = 13;
  repeated STGraphDebug st_graph = 14;
  repeated SLFrameDebug sl_frame = 15;

  optional apollo.common.Header prediction_header = 16;
  optional SignalLightDebug signal_light = 17;

  repeated ObstacleDebug obstacle = 18;
  repeated ReferenceLineDebug reference_line = 19;
  optional DpPolyGraphDebug dp_poly_graph = 20;
  optional LatticeStTraining lattice_st_image = 21;
  optional apollo.relative_map.MapMsg relative_map = 22;
  optional AutoTuningTrainingData auto_tuning_training_data = 23;
}

message LatticeStPixel {
  optional int32 s = 1;
  optional int32 t = 2;
  optional uint32 r = 3;
  optional uint32 g = 4;
  optional uint32 b = 5;
}

message LatticeStTraining {
  repeated LatticeStPixel pixel = 1;
  optional double timestamp = 2;
  optional string annotation = 3;
  optional uint32 num_s_grids = 4;
  optional uint32 num_t_grids = 5;
  optional double s_resolution = 6;
  optional double t_resolution = 7;
}

message CostComponents {
  repeated double cost_component = 1;
}

message AutoTuningTrainingData {
  optional CostComponents teacher_component = 1;
  optional CostComponents student_component = 2;
}

message CloudReferenceLineRequest {
  repeated apollo.routing.LaneSegment lane_segment = 1;
}

message CloudReferenceLineRoutingRequest {
  optional apollo.routing.RoutingResponse routing = 1;
}

message CloudReferenceLineResponse {
  repeated apollo.common.Path segment = 1;
}


